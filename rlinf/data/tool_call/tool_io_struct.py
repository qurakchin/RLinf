# Copyright 2025 The RLinf Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from typing import Any, Literal

from pydantic import BaseModel


class ToolChannelRequest(BaseModel):
    """Request to a tool channel."""

    # session_id is REQUIRED. also used as the response channel key
    session_id: str
    request_type: Literal["session_start", "session_end", "execute"]
    tool_name: str | None = None
    tool_args: dict | None = None


class ToolChannelResponse(BaseModel):
    """Response from a tool channel."""

    success: bool

    # execute result if success is True, otherwise failure message
    result: Any | None = None
    session_state: Any | None = None
    meta_info: dict | None = None


class ToolRequest(BaseModel):
    """The name of the function to call."""

    name: str

    """The arguments to call the function with, as generated by the model in JSON format."""
    arguments: dict


class ToolResponse(BaseModel):
    """The response from a tool execution."""

    text: str
